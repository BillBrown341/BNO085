##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name _;

	# allow healthcheck
	location /sensorhub/test {
		proxy_pass http://localhost:8181/sensorhub/test;
	}

	# redirect everything else to https
	location / {
		return 301 https://$host$request_uri;
	}
}

server {
	# SSL configuration
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;
	ssl_certificate /etc/nginx/nginx.crt;
	ssl_certificate_key /etc/nginx/nginx.key;

	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm;

	server_name _;

	# don't redirect letsencrypt robot
	location /.well-known/acme-challenge {
	}

	location / {
		# redirect HTTP to HTTPS
		if ($http_x_forwarded_proto = "http") {
			return 301 https://$host$request_uri;
		}

		# proxy to web app hosted in osh web folder
		proxy_pass http://localhost:8181/;
	}

	location = /sensorhub/sos {

		# redirect HTTP to HTTPS
		if ($http_x_forwarded_proto = "http") {
			return 301 https://$host$request_uri;
		}

		# Set proper CORS headers
		add_header 'Access-Control-Max-Age' 600;
		add_header 'Access-Control-Allow-Origin' "$http_origin" always;
		add_header 'Access-Control-Allow-Credentials' 'true' always;
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
		add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;

		# proxy osh application server
		proxy_pass http://localhost:8181/sensorhub/sos;
		proxy_http_version 1.1;
		proxy_redirect off;
		proxy_request_buffering off;

		# unlimited body size to allow incoming streams
		client_max_body_size 0;

		# handle websocket Upgrade requests
		set $upgrade_header "";
		set $connection_header "";
		if ($http_upgrade) {
			set $upgrade_header $http_upgrade;
			set $connection_header "upgrade";
		}
		proxy_set_header Upgrade $upgrade_header;
		proxy_set_header Connection $connection_header;
		proxy_read_timeout 86400s;
	}
}
